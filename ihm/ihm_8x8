import tkinter as tk

class ihm_8x8:

    def __init__(self):
        self.taille = 0

    def grille8x8():
        global taille, text_id_message, text_ids, grid_values, rows, cols, cell_size, canvas, roots, page1_ouverte, root,offset_x,offset_y
        taille =1
        # Définition des paramètres graphique
        if page1_ouverte == False :
            roots.destroy()
        page1_ouverte = True
        root = tk.Tk()
        root.title("Grille 8x8")
        # Dimensions de la grille
        rows, cols = 8, 8
        cell_size = 50  # Taille des cellules en pixels
        # Création du canvas pour dessiner la grille
        canvas = tk.Canvas(root, width=cols*cell_size*1.9, height=rows*cell_size*1.3)
        canvas.pack()
        text_ids = [[None for _ in range(cols)] for _ in range(rows)]
        grid_values = [["" for _ in range(cols)] for _ in range(rows)]
        text_id_message = None
        grid_values1 = [["" for _ in range(cols)] for _ in range(rows)]
        # Définir les décalages pour centrer la grille
        offset_x = 30  # Décalage horizontal
        offset_y = 20  # Décalage vertical
        # Dessin des lignes horizontales et verticales
        for i in range(rows + 1):
            canvas.create_line(offset_x, offset_y + i * cell_size, offset_x + cols * cell_size, offset_y + i * cell_size)  # Lignes horizontales
        for j in range(cols + 1):
            canvas.create_line(offset_x + j * cell_size, offset_y, offset_x + j * cell_size, offset_y + rows * cell_size)  # Lignes verticales
        canvas.bind("<Button-1>", on_click)
        # creation des boutons
        button_clear = tk.Button(root, text="Réinitialiser", command=clear,width=15, height=3)
        button_verif = tk.Button(root, text="Vérifier", command=verifier,width=15, height=3)
        button_valider = tk.Button(root, text="Valider", command=verifier,width=15, height=3)
        button_home = tk.Button(root, text="Accueil", command=home,width=7, height=2)
        # Placement du bouton dans la fenêtre
        button_clear.place(x=530, y=100)
        button_verif.place(x=530, y=200)
        button_valider.place(x=530, y=300)
        button_home.place(x=710, y=0)
        canvas.create_text(590, 40, text="TAKUZU grille 8x8", font=('Helvetica', 20), fill="black")
        canvas.create_text(80, 440, text="Message", font=('Helvetica', 10), fill="black")
        canvas.create_rectangle(50, 450, 500, 480, outline="black", width=1, fill="")

        
        #numérotation ligne
        canvas.create_text(offset_x-10, offset_y+10, text="1", font=('Helvetica', 10), fill="black")
        canvas.create_text(offset_x-10, offset_y+60, text="2", font=('Helvetica', 10), fill="black")
        canvas.create_text(offset_x-10, offset_y+110, text="3", font=('Helvetica', 10), fill="black")
        canvas.create_text(offset_x-10, offset_y+160, text="4", font=('Helvetica', 10), fill="black")
        canvas.create_text(offset_x-10, offset_y+210, text="5", font=('Helvetica', 10), fill="black")
        canvas.create_text(offset_x-10, offset_y+260, text="6", font=('Helvetica', 10), fill="black")
        canvas.create_text(offset_x-10, offset_y+310, text="7", font=('Helvetica', 10), fill="black")
        canvas.create_text(offset_x-10, offset_y+360, text="8", font=('Helvetica', 10), fill="black")
        #numérotation colonne
        canvas.create_text(offset_x+10, offset_y-10, text="1", font=('Helvetica', 10), fill="black")
        canvas.create_text(offset_x+60, offset_y-10, text="2", font=('Helvetica', 10), fill="black")
        canvas.create_text(offset_x+110, offset_y-10, text="3", font=('Helvetica', 10), fill="black")
        canvas.create_text(offset_x+160, offset_y-10, text="4", font=('Helvetica', 10), fill="black")
        canvas.create_text(offset_x+210, offset_y-10, text="5", font=('Helvetica', 10), fill="black")
        canvas.create_text(offset_x+260, offset_y-10, text="6", font=('Helvetica', 10), fill="black")
        canvas.create_text(offset_x+310, offset_y-10, text="7", font=('Helvetica', 10), fill="black")
        canvas.create_text(offset_x+360, offset_y-10, text="8", font=('Helvetica', 10), fill="black")
        # Remplir le canvas avec les valeurs générées dans grid_values
        text_ids[0][3] = "Rempli"
        canvas.create_text(offset_x+3 * cell_size + cell_size // 2,offset_y+ 0 * cell_size + cell_size // 2, text=0, font=('Helvetica', 12), fill="black")
        grid_values[0][3]=0
        text_ids[0][5] = "Rempli"
        canvas.create_text(offset_x + 5 * cell_size + cell_size // 2,offset_y+ 0 * cell_size + cell_size // 2, text=0, font=('Helvetica', 12), fill="black")
        grid_values[0][5]=0
        text_ids[1][0] = "Rempli"
        canvas.create_text(offset_x+0 * cell_size + cell_size // 2, offset_y+1 * cell_size + cell_size // 2, text=1, font=('Helvetica', 12), fill="black")
        grid_values[1][0]=1
        text_ids[1][7] = "Rempli"
        canvas.create_text(offset_x+7 * cell_size + cell_size // 2,offset_y+ 1 * cell_size + cell_size // 2, text=0, font=('Helvetica', 12), fill="black")
        grid_values[1][7]=0
        text_ids[2][4] = "Rempli"
        canvas.create_text(offset_x+4 * cell_size + cell_size // 2,offset_y+ 2 * cell_size + cell_size // 2, text=0, font=('Helvetica', 12), fill="black")
        grid_values[2][4]=0
        text_ids[3][2] = "Rempli"
        canvas.create_text(offset_x+2 * cell_size + cell_size // 2,offset_y+ 3 * cell_size + cell_size // 2, text=1, font=('Helvetica', 12), fill="black")
        grid_values[3][2]=1
        text_ids[4][4] = "Rempli"
        canvas.create_text(offset_x+4 * cell_size + cell_size // 2,offset_y+ 4 * cell_size + cell_size // 2, text=0, font=('Helvetica', 12), fill="black")
        grid_values[4][4]=0
        text_ids[4][5] = "Rempli"
        canvas.create_text(offset_x+5 * cell_size + cell_size // 2,offset_y+ 4 * cell_size + cell_size // 2, text=0, font=('Helvetica', 12), fill="black")
        grid_values[4][5]=0
        text_ids[4][7] = "Rempli"
        canvas.create_text(offset_x+7 * cell_size + cell_size // 2,offset_y+ 4 * cell_size + cell_size // 2, text=0, font=('Helvetica', 12), fill="black")
        grid_values[4][7]=0
        text_ids[6][0] = "Rempli"
        canvas.create_text(offset_x+0 * cell_size + cell_size // 2,offset_y+ 6 * cell_size + cell_size // 2, text=0, font=('Helvetica', 12), fill="black")
        grid_values[6][0]=0
        text_ids[6][2] = "Rempli"
        canvas.create_text(offset_x+2 * cell_size + cell_size // 2,offset_y+ 6 * cell_size + cell_size // 2, text=0, font=('Helvetica', 12), fill="black")
        grid_values[6][2]=0
        text_ids[6][5] = "Rempli"
        canvas.create_text(offset_x+5 * cell_size + cell_size // 2,offset_y+ 6 * cell_size + cell_size // 2, text=0, font=('Helvetica', 12), fill="black")
        grid_values[6][5]=0
        text_ids[6][7] = "Rempli"
        canvas.create_text(offset_x+7 * cell_size + cell_size // 2,offset_y+ 6 * cell_size + cell_size // 2, text=0, font=('Helvetica', 12), fill="black")
        grid_values[6][7]=0
        text_ids[7][0] = "Rempli"
        canvas.create_text(offset_x+0 * cell_size + cell_size // 2,offset_y+ 7 * cell_size + cell_size // 2, text=0, font=('Helvetica', 12), fill="black")
        grid_values[7][0]=0
        text_ids[7][3] = "Rempli"
        canvas.create_text(offset_x+3 * cell_size + cell_size // 2,offset_y+ 7 * cell_size + cell_size // 2, text=0, font=('Helvetica', 12), fill="black")
        grid_values[7][3]=0
        text_ids[7][5] = "Rempli"
        canvas.create_text(offset_x+5 * cell_size + cell_size // 2,offset_y+ 7 * cell_size + cell_size // 2, text=1, font=('Helvetica', 12), fill="black")
        grid_values[7][5]=1
        text_ids[7][6] = "Rempli"
        canvas.create_text(offset_x+6 * cell_size + cell_size // 2,offset_y+ 7 * cell_size + cell_size // 2, text=1, font=('Helvetica', 12), fill="black")
        grid_values[7][6]=1
        for i in range(8) :
            print(grid_values[i])